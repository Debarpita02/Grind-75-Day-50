import java.util.Stack;

public class Solution {
    public int calculate(String s) {
        Stack<Integer> stack = new Stack<>();
        int result = 0;
        int num = 0;
        int sign = 1;

        for (char ch : s.toCharArray()) {
            if (Character.isDigit(ch)) {
                num = num * 10 + (ch - '0');
            } else if (ch == '+' || ch == '-') {
                result += sign * num;
                num = 0;
                sign = (ch == '+') ? 1 : -1;
            } else if (ch == '(') {
                stack.push(result);
                stack.push(sign);
                result = 0;
                sign = 1;
            } else if (ch == ')') {
                result += sign * num;
                num = 0;
                result *= stack.pop(); // Previous sign
                result += stack.pop(); // Previous result
            }
        }

        return result + (sign * num);
    }

    public static void main(String[] args) {
        Solution calculator = new Solution();

        String s1 = "1 + 1";
        System.out.println(calculator.calculate(s1)); // Output: 2

        String s2 = " 2-1 + 2 ";
        System.out.println(calculator.calculate(s2)); // Output: 3

        String s3 = "(1+(4+5+2)-3)+(6+8)";
        System.out.println(calculator.calculate(s3)); // Output: 23
    }
}
